{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters" : {
        "CloudLabsAccessKey" : {
            "Description": "AccessKey value",
            "Type" : "String"
        },
        "CloudLabsSecretKey" : {
            "Description": "SecretKey value",
            "Type" : "String"
        },
        "CloudLabsDeploymentID" : {
            "Description": "DeploymentID value",
            "Type" : "String"
        }
  },
    "Resources" : {
      "S3Bucket": {
         "Type": "AWS::S3::Bucket",
         "Properties": {
             "BucketName": "uniq213131ket987678"
         }
     },
        "myVPC" : {
            "Type" : "AWS::EC2::VPC",
            "Properties" : {
               "CidrBlock" : "10.0.0.0/16",
               "EnableDnsSupport" : "true",
               "EnableDnsHostnames" : "true",
               "InstanceTenancy" : "dedicated"
            }
         },
          
         "mySubnet" : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
               "VpcId" : { "Ref" : "myVPC" },
               "CidrBlock" : "10.0.0.0/24",
               "AvailabilityZone" : "us-east-1a",
               "MapPublicIpOnLaunch" : "true"
            }
         },
         "myInternetGateway" : {
               "Type" : "AWS::EC2::InternetGateway",
               "Properties" : {
                 "Tags" : [ {"Key" : "Name", "Value" : "gateway"}]
               }
            },
            "VpcGWattach" : {
           "Type" : "AWS::EC2::VPCGatewayAttachment",
           "Properties" : {
               "InternetGatewayId" : { "Ref" : "myInternetGateway" },
               "VpcId" : { "Ref" : "myVPC" }
             }
         },
         "myRouteTable" : {
            "Type" : "AWS::EC2::RouteTable",
            "Properties" : {
               "VpcId" : { "Ref" : "myVPC" }
            }
         },
         "myRoute" : {
            "Type" : "AWS::EC2::Route",
            "Properties" : {
               "RouteTableId" : { "Ref" : "myRouteTable" },
               "DestinationCidrBlock" : "0.0.0.0/0",
               "GatewayId" : { "Ref" : "myInternetGateway" }
            }
         },
         "mySubnetRouteTableAssociation" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
               "SubnetId" : { "Ref" : "mySubnet" },
               "RouteTableId" : { "Ref" : "myRouteTable" }
            }
         },
         "InstanceSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
               "GroupDescription": "Enable HTTP, HTTPS and SSH access",
               "GroupName": "WANDisco-sg",
               "VpcId" : {"Ref" : "myVPC"},
               "SecurityGroupIngress": [
                  {
                     "IpProtocol": "tcp",
                     "CidrIp": "0.0.0.0/0",
                     "FromPort": 22,
                     "ToPort": 22
                  },
                  {  
                     "IpProtocol": "tcp",
                     "CidrIp": "0.0.0.0/0",
                     "FromPort": 443,
                     "ToPort": 443
                  },
                  {
                     "IpProtocol": "tcp",
                     "CidrIp": "0.0.0.0/0",
                     "FromPort": 8080,
                     "ToPort": 8080   
                  },
                  {
                     "IpProtocol": "tcp",
                     "CidrIp": "0.0.0.0/0",
                     "FromPort": 8000,
                     "ToPort": 8000
                  }
               ]
            }
         },
 "EC2Instance" : {
    "Type" : "AWS::EC2::Instance",
    "Properties" : {
               "InstanceType" : "t3.micro",
               "ImageId" : "ami-0d46560acd60f2750",
               "KeyName" : "WANDisco-key",
               "NetworkInterfaces": [   
                   {
                     "DeleteOnTermination": "true",
                     "GroupSet": [{"Ref" : "InstanceSecurityGroup"}],
                     "DeviceIndex": 0,
                     "SubnetId": { "Ref" : "mySubnet" },
                     "AssociatePublicIpAddress": "true"
                   }
                 ]
            }
         }
    },
    "Outputs" : {
          "VMDNSName" : {
            "Description" : "Public DNSName of the newly created EC2 instance",
            "Value" : { "Fn::GetAtt" : [ "EC2Instance", "PublicDnsName" ] }
          },
          "VMUserName" : {
              "Description" : "username of the newly created EC2 instance",
              "Value" : "ubuntu"
          },
          "VMPassword" : {
            "Description" : "Password of the newly created EC2 instance",
            "Value" : "Password.Azure!!"
          }
      }
 }
    
